<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework.AzureTableStorage</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Metadata.MetadataExtensions.PartitionAndRowKey``2(Microsoft.Data.Entity.Metadata.IEntityBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Sets the partition key, row key, and creates a composite entity key
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEntityBuilder"></typeparam>
            <param name="builder"></param>
            <param name="partitionKeyExpression"></param>
            <param name="rowKeyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.AtsConnection.#ctor">
            <summary>
                For testing. Improper usage may lead to NullReference exceptions
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.AtsDataStore.#ctor(Microsoft.Data.Entity.Infrastructure.DbContextConfiguration,Microsoft.Data.Entity.AzureTableStorage.AtsConnection,Microsoft.Data.Entity.AzureTableStorage.Adapters.TableEntityAdapterFactory)">
            <summary>
                Provided only for testing purposes. Do not use.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.AtsValueGeneratorCache.#ctor">
            <summary>
                This constructor is intended only for use when creating test doubles that will override members
                with mocked or faked behavior. Use of this constructor for other purposes may result in unexpected
                behavior including but not limited to throwing <see cref="T:System.NullReferenceException" />.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.ArgumentIsEmpty">
            <summary>
            The string argument '{argumentName}' cannot be empty.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatArgumentIsEmpty(System.Object)">
            <summary>
            The string argument '{argumentName}' cannot be empty.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.CollectionArgumentIsEmpty">
            <summary>
            The collection argument '{argumentName}' must contain at least one element.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatCollectionArgumentIsEmpty(System.Object)">
            <summary>
            The collection argument '{argumentName}' must contain at least one element.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.InvalidEnumValue">
            <summary>
            The value provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatInvalidEnumValue(System.Object,System.Object)">
            <summary>
            The value provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.CannotModifyAccount">
            <summary>
            Cannot modify an Azure Storage account from within the Entity Framework
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatCannotModifyAccount">
            <summary>
            Cannot modify an Azure Storage account from within the Entity Framework
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.InvalidPoco">
            <summary>
            Cannot access a public setter and getter for the property '{propertyName}' of type '{typeName}'
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatInvalidPoco(System.Object,System.Object)">
            <summary>
            Cannot access a public setter and getter for the property '{propertyName}' of type '{typeName}'
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.AtsDatabaseNotInUse">
            <summary>
            This database cannot be used as an Azure Table Storage Database
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatAtsDatabaseNotInUse">
            <summary>
            This database cannot be used as an Azure Table Storage Database
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.InvalidReadType">
            <summary>
            Cannot read value of type '{typeName}' from '{accessName}'
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatInvalidReadType(System.Object,System.Object)">
            <summary>
            Cannot read value of type '{typeName}' from '{accessName}'
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.PropertyWithStorageNameNotFound">
            <summary>
            A property with the storage name '{property}' on entity type '{entityType}' could not be found. Ensure that the property exists, has been included in the model, and has been configured with storage name specified.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatPropertyWithStorageNameNotFound(System.Object,System.Object)">
            <summary>
            A property with the storage name '{property}' on entity type '{entityType}' could not be found. Ensure that the property exists, has been included in the model, and has been configured with storage name specified.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.AtsConnectionNotInUse">
            <summary>
            This connection cannot be used as an Azure Table Storage Connection
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatAtsConnectionNotInUse">
            <summary>
            This connection cannot be used as an Azure Table Storage Connection
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.MissingFilterString">
            <summary>
            This query command has no filter string. This will pull the entire table into memory. Best practices recommend filtering with a partition and row key.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatMissingFilterString">
            <summary>
            This query command has no filter string. This will pull the entire table into memory. Best practices recommend filtering with a partition and row key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.MissingPartitionOrRowKey">
            <summary>
            This query command has no partition key and/or row key in the query filter. This can produce a large table scan that will reduce performance and may increase costs. Best practices recommend filtering with a partition and row key.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatMissingPartitionOrRowKey">
            <summary>
            This query command has no partition key and/or row key in the query filter. This can produce a large table scan that will reduce performance and may increase costs. Best practices recommend filtering with a partition and row key.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.ETagPreconditionFailed">
            <summary>
            This entity has been modified on the server. Overwriting will destory changes that exist only on the server.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatETagPreconditionFailed">
            <summary>
            This entity has been modified on the server. Overwriting will destory changes that exist only on the server.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.SaveChangesFailed">
            <summary>
            Could not save changes. See inner exception for details.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatSaveChangesFailed">
            <summary>
            Could not save changes. See inner exception for details.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.ResourceNotFound">
            <summary>
            Table or row not found on server
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatResourceNotFound">
            <summary>
            Table or row not found on server
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.AzureTableStorage.Strings.TableNotFound">
            <summary>
            Table not found on server
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.AzureTableStorage.Strings.FormatTableNotFound">
            <summary>
            Table not found on server
            </summary>
        </member>
    </members>
</doc>
