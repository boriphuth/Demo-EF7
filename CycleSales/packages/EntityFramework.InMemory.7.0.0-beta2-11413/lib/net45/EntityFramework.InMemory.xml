<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework.InMemory</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Data.Entity.InMemory.InMemoryConnection.#ctor">
            <summary>
                This constructor is intended only for use when creating test doubles that will override members
                with mocked or faked behavior. Use of this constructor for other purposes may result in unexpected
                behavior including but not limited to throwing <see cref="!:NullReferenceException" />.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.InMemory.InMemoryDatabase.IsCreated(Microsoft.Data.Entity.Metadata.IModel)">
            <summary>
                Returns true just after the database has been created, false thereafter
            </summary>
            <returns>
                true if the database has just been created, false otherwise
            </returns>
        </member>
        <member name="M:Microsoft.Data.Entity.InMemory.InMemoryDataStore.#ctor">
            <summary>
                This constructor is intended only for use when creating test doubles that will override members
                with mocked or faked behavior. Use of this constructor for other purposes may result in unexpected
                behavior including but not limited to throwing <see cref="!:NullReferenceException" />.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.InMemory.Strings.ArgumentIsEmpty">
            <summary>
            The string argument '{argumentName}' cannot be empty.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.InMemory.Strings.FormatArgumentIsEmpty(System.Object)">
            <summary>
            The string argument '{argumentName}' cannot be empty.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.InMemory.Strings.InvalidEnumValue">
            <summary>
            The value provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.InMemory.Strings.FormatInvalidEnumValue(System.Object,System.Object)">
            <summary>
            The value provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.InMemory.Strings.LogSavedChanges">
            <summary>
            Saved {count} entities to in-memory store.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.InMemory.Strings.FormatLogSavedChanges(System.Object)">
            <summary>
            Saved {count} entities to in-memory store.
            </summary>
        </member>
    </members>
</doc>
